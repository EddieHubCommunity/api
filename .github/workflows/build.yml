name: Build
on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Authenticate with GitHub package registry
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
      - name: install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: lint check
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Authenticate with GitHub package registry
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
      - name: install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: run build
        run: npm run build

  test:
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-latest
    services:
      stargate:
        image: stargateio/stargate-3_11:v1.0.13
        ports:
          - 8080:8080
          - 8081:8081
          - 8082:8082
        env:
          CLUSTER_NAME: stargate
          CLUSTER_VERSION: 3.11
          DEVELOPER_MODE: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Authenticate with GitHub package registry
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
      - name: install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: run unit tests
        run: npm run test
      - name: run e2e tests
        run: npm run test:e2e
